{"id":"src/inputfield.js","dependencies":[{"name":"C:\\Users\\Senthamizhan Che\\Desktop\\React\\package.json","includedInParent":true,"mtime":1601718517251},{"name":"react","loc":{"line":1,"column":39},"parent":"C:\\Users\\Senthamizhan Che\\Desktop\\React\\src\\inputfield.js","resolved":"C:\\Users\\Senthamizhan Che\\Desktop\\React\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar InputField = function InputField(props) {\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var updateInputValue = function updateInputValue(event) {\n    setInputValue(event.target.value);\n    console.log(inputValue);\n  };\n\n  var submitClicked = function submitClicked() {\n    if (inputValue) {\n      props.addTask(inputValue);\n    }\n\n    setInputValue(\"\");\n  };\n\n  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(\"input\", {\n    type: \"text\",\n    onChange: updateInputValue,\n    value: inputValue,\n    placeholder: \"Enter new item\"\n  }), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: submitClicked\n  }, \"+\"));\n};\n\nvar _default = InputField;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/inputfield.js","original":{"line":1,"column":0}},{"generated":{"line":26,"column":0},"source":"src/inputfield.js","original":{"line":3,"column":0}},{"name":"InputField","generated":{"line":26,"column":4},"source":"src/inputfield.js","original":{"line":3,"column":6}},{"generated":{"line":26,"column":14},"source":"src/inputfield.js","original":{"line":3,"column":16}},{"generated":{"line":26,"column":17},"source":"src/inputfield.js","original":{"line":3,"column":19}},{"name":"InputField","generated":{"line":26,"column":26},"source":"src/inputfield.js","original":{"line":3,"column":6}},{"generated":{"line":26,"column":36},"source":"src/inputfield.js","original":{"line":3,"column":19}},{"name":"props","generated":{"line":26,"column":37},"source":"src/inputfield.js","original":{"line":3,"column":20}},{"generated":{"line":26,"column":42},"source":"src/inputfield.js","original":{"line":3,"column":19}},{"generated":{"line":26,"column":44},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"generated":{"line":27,"column":0},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"generated":{"line":27,"column":18},"source":"src/inputfield.js","original":{"line":4,"column":39}},{"generated":{"line":27,"column":39},"source":"src/inputfield.js","original":{"line":4,"column":48}},{"generated":{"line":27,"column":41},"source":"src/inputfield.js","original":{"line":4,"column":39}},{"generated":{"line":27,"column":42},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"generated":{"line":28,"column":0},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"generated":{"line":29,"column":0},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"name":"inputValue","generated":{"line":29,"column":6},"source":"src/inputfield.js","original":{"line":4,"column":11}},{"generated":{"line":29,"column":16},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"generated":{"line":30,"column":0},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"name":"setInputValue","generated":{"line":30,"column":6},"source":"src/inputfield.js","original":{"line":4,"column":22}},{"generated":{"line":30,"column":19},"source":"src/inputfield.js","original":{"line":3,"column":30}},{"generated":{"line":32,"column":0},"source":"src/inputfield.js","original":{"line":6,"column":4}},{"name":"updateInputValue","generated":{"line":32,"column":6},"source":"src/inputfield.js","original":{"line":6,"column":10}},{"generated":{"line":32,"column":22},"source":"src/inputfield.js","original":{"line":6,"column":26}},{"generated":{"line":32,"column":25},"source":"src/inputfield.js","original":{"line":6,"column":29}},{"name":"updateInputValue","generated":{"line":32,"column":34},"source":"src/inputfield.js","original":{"line":6,"column":10}},{"generated":{"line":32,"column":50},"source":"src/inputfield.js","original":{"line":6,"column":29}},{"name":"event","generated":{"line":32,"column":51},"source":"src/inputfield.js","original":{"line":6,"column":30}},{"generated":{"line":32,"column":56},"source":"src/inputfield.js","original":{"line":6,"column":29}},{"generated":{"line":32,"column":58},"source":"src/inputfield.js","original":{"line":6,"column":40}},{"name":"setInputValue","generated":{"line":33,"column":0},"source":"src/inputfield.js","original":{"line":7,"column":8}},{"name":"setInputValue","generated":{"line":33,"column":4},"source":"src/inputfield.js","original":{"line":7,"column":8}},{"generated":{"line":33,"column":17},"source":"src/inputfield.js","original":{"line":7,"column":21}},{"name":"event","generated":{"line":33,"column":18},"source":"src/inputfield.js","original":{"line":7,"column":22}},{"generated":{"line":33,"column":23},"source":"src/inputfield.js","original":{"line":7,"column":27}},{"name":"target","generated":{"line":33,"column":24},"source":"src/inputfield.js","original":{"line":7,"column":28}},{"generated":{"line":33,"column":30},"source":"src/inputfield.js","original":{"line":7,"column":22}},{"name":"value","generated":{"line":33,"column":31},"source":"src/inputfield.js","original":{"line":7,"column":35}},{"generated":{"line":33,"column":36},"source":"src/inputfield.js","original":{"line":7,"column":21}},{"generated":{"line":33,"column":37},"source":"src/inputfield.js","original":{"line":7,"column":8}},{"name":"console","generated":{"line":34,"column":0},"source":"src/inputfield.js","original":{"line":8,"column":8}},{"name":"console","generated":{"line":34,"column":4},"source":"src/inputfield.js","original":{"line":8,"column":8}},{"generated":{"line":34,"column":11},"source":"src/inputfield.js","original":{"line":8,"column":15}},{"name":"log","generated":{"line":34,"column":12},"source":"src/inputfield.js","original":{"line":8,"column":16}},{"generated":{"line":34,"column":15},"source":"src/inputfield.js","original":{"line":8,"column":8}},{"name":"inputValue","generated":{"line":34,"column":16},"source":"src/inputfield.js","original":{"line":8,"column":20}},{"generated":{"line":34,"column":26},"source":"src/inputfield.js","original":{"line":8,"column":8}},{"generated":{"line":35,"column":0},"source":"src/inputfield.js","original":{"line":9,"column":5}},{"generated":{"line":35,"column":3},"source":"src/inputfield.js","original":{"line":6,"column":4}},{"generated":{"line":37,"column":0},"source":"src/inputfield.js","original":{"line":11,"column":4}},{"name":"submitClicked","generated":{"line":37,"column":6},"source":"src/inputfield.js","original":{"line":11,"column":10}},{"generated":{"line":37,"column":19},"source":"src/inputfield.js","original":{"line":11,"column":23}},{"generated":{"line":37,"column":22},"source":"src/inputfield.js","original":{"line":11,"column":26}},{"name":"submitClicked","generated":{"line":37,"column":31},"source":"src/inputfield.js","original":{"line":11,"column":10}},{"generated":{"line":37,"column":44},"source":"src/inputfield.js","original":{"line":11,"column":26}},{"generated":{"line":37,"column":47},"source":"src/inputfield.js","original":{"line":11,"column":32}},{"generated":{"line":38,"column":0},"source":"src/inputfield.js","original":{"line":12,"column":4}},{"name":"inputValue","generated":{"line":38,"column":8},"source":"src/inputfield.js","original":{"line":12,"column":7}},{"generated":{"line":38,"column":18},"source":"src/inputfield.js","original":{"line":12,"column":4}},{"generated":{"line":38,"column":20},"source":"src/inputfield.js","original":{"line":12,"column":18}},{"name":"props","generated":{"line":39,"column":0},"source":"src/inputfield.js","original":{"line":13,"column":8}},{"name":"props","generated":{"line":39,"column":6},"source":"src/inputfield.js","original":{"line":13,"column":8}},{"generated":{"line":39,"column":11},"source":"src/inputfield.js","original":{"line":13,"column":13}},{"name":"addTask","generated":{"line":39,"column":12},"source":"src/inputfield.js","original":{"line":13,"column":14}},{"generated":{"line":39,"column":19},"source":"src/inputfield.js","original":{"line":13,"column":8}},{"name":"inputValue","generated":{"line":39,"column":20},"source":"src/inputfield.js","original":{"line":13,"column":22}},{"generated":{"line":39,"column":30},"source":"src/inputfield.js","original":{"line":13,"column":8}},{"generated":{"line":40,"column":0},"source":"src/inputfield.js","original":{"line":14,"column":5}},{"name":"setInputValue","generated":{"line":42,"column":0},"source":"src/inputfield.js","original":{"line":15,"column":4}},{"name":"setInputValue","generated":{"line":42,"column":4},"source":"src/inputfield.js","original":{"line":15,"column":4}},{"generated":{"line":42,"column":17},"source":"src/inputfield.js","original":{"line":15,"column":17}},{"generated":{"line":42,"column":18},"source":"src/inputfield.js","original":{"line":15,"column":18}},{"generated":{"line":42,"column":20},"source":"src/inputfield.js","original":{"line":15,"column":17}},{"generated":{"line":42,"column":21},"source":"src/inputfield.js","original":{"line":15,"column":4}},{"generated":{"line":43,"column":0},"source":"src/inputfield.js","original":{"line":16,"column":5}},{"generated":{"line":43,"column":3},"source":"src/inputfield.js","original":{"line":11,"column":4}},{"generated":{"line":45,"column":0},"source":"src/inputfield.js","original":{"line":18,"column":4}},{"generated":{"line":45,"column":22},"source":"src/inputfield.js","original":{"line":19,"column":12}},{"generated":{"line":45,"column":51},"source":"src/inputfield.js","original":{"line":19,"column":13}},{"generated":{"line":45,"column":66},"source":"src/inputfield.js","original":{"line":19,"column":12}},{"generated":{"line":45,"column":87},"source":"src/inputfield.js","original":{"line":20,"column":16}},{"generated":{"line":46,"column":0},"source":"src/inputfield.js","original":{"line":20,"column":23}},{"generated":{"line":46,"column":4},"source":"src/inputfield.js","original":{"line":20,"column":23}},{"generated":{"line":46,"column":8},"source":"src/inputfield.js","original":{"line":20,"column":27}},{"generated":{"line":46,"column":10},"source":"src/inputfield.js","original":{"line":20,"column":28}},{"generated":{"line":46,"column":16},"source":"src/inputfield.js","original":{"line":20,"column":16}},{"generated":{"line":47,"column":0},"source":"src/inputfield.js","original":{"line":20,"column":35}},{"generated":{"line":47,"column":4},"source":"src/inputfield.js","original":{"line":20,"column":35}},{"generated":{"line":47,"column":12},"source":"src/inputfield.js","original":{"line":20,"column":43}},{"name":"updateInputValue","generated":{"line":47,"column":14},"source":"src/inputfield.js","original":{"line":20,"column":45}},{"generated":{"line":47,"column":30},"source":"src/inputfield.js","original":{"line":20,"column":16}},{"generated":{"line":48,"column":0},"source":"src/inputfield.js","original":{"line":20,"column":63}},{"generated":{"line":48,"column":4},"source":"src/inputfield.js","original":{"line":20,"column":63}},{"generated":{"line":48,"column":9},"source":"src/inputfield.js","original":{"line":20,"column":68}},{"name":"inputValue","generated":{"line":48,"column":11},"source":"src/inputfield.js","original":{"line":20,"column":70}},{"generated":{"line":48,"column":21},"source":"src/inputfield.js","original":{"line":20,"column":16}},{"generated":{"line":49,"column":0},"source":"src/inputfield.js","original":{"line":20,"column":82}},{"generated":{"line":49,"column":4},"source":"src/inputfield.js","original":{"line":20,"column":82}},{"generated":{"line":49,"column":15},"source":"src/inputfield.js","original":{"line":20,"column":93}},{"generated":{"line":49,"column":17},"source":"src/inputfield.js","original":{"line":20,"column":94}},{"generated":{"line":50,"column":0},"source":"src/inputfield.js","original":{"line":20,"column":16}},{"generated":{"line":50,"column":4},"source":"src/inputfield.js","original":{"line":19,"column":12}},{"generated":{"line":50,"column":19},"source":"src/inputfield.js","original":{"line":21,"column":16}},{"generated":{"line":51,"column":0},"source":"src/inputfield.js","original":{"line":21,"column":24}},{"generated":{"line":51,"column":4},"source":"src/inputfield.js","original":{"line":21,"column":24}},{"generated":{"line":51,"column":11},"source":"src/inputfield.js","original":{"line":21,"column":31}},{"name":"submitClicked","generated":{"line":51,"column":13},"source":"src/inputfield.js","original":{"line":21,"column":33}},{"generated":{"line":52,"column":0},"source":"src/inputfield.js","original":{"line":21,"column":16}},{"generated":{"line":52,"column":9},"source":"src/inputfield.js","original":{"line":19,"column":12}},{"generated":{"line":52,"column":10},"source":"src/inputfield.js","original":{"line":18,"column":4}},{"generated":{"line":53,"column":0},"source":"src/inputfield.js","original":{"line":24,"column":5}},{"generated":{"line":53,"column":1},"source":"src/inputfield.js","original":{"line":3,"column":0}},{"name":"InputField","generated":{"line":55,"column":15},"source":"src/inputfield.js","original":{"line":26,"column":15}}],"sources":{"src/inputfield.js":"import React,{Fragment, useState} from \"react\";\r\n\r\nconst InputField = (props) => {\r\n    const [inputValue,setInputValue] = useState(\"\");\r\n\r\n    const updateInputValue = (event) => {\r\n        setInputValue(event.target.value);\r\n        console.log(inputValue)\r\n    };\r\n\r\n    const submitClicked = () => {\r\n    if(inputValue){\r\n        props.addTask(inputValue);\r\n    }\r\n    setInputValue(\"\");\r\n    };\r\n\r\n    return (\r\n            <Fragment>\r\n                <input type=\"text\" onChange={updateInputValue} value={inputValue} placeholder=\"Enter new item\" />\r\n                <button onClick={submitClicked}>+</button>\r\n            </Fragment>\r\n    )\r\n    }\r\n\r\nexport default InputField;"},"lineCount":null}},"error":null,"hash":"10edf6109c66f5c488de1c0e70293ee8","cacheData":{"env":{}}}